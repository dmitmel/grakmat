///////////////////////// PLUGINS /////////////////////////
buildscript {
    ext {
        kotlinVersion = '1.0.4'
        junitVersion = '4.12'
        dokkaVersion = '0.9.9'
        argparse4jVersion = '0.7.0'
    }
    
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven-publish'
///////////////////////// END OF PLUGINS /////////////////////////

group = 'org.drimachine.grakmat'
version = '1.0'

dokka {
    sourceDirs = files("$projectDir/src/main/kotlin")
}

sourceSets {
    main { output.resourcesDir = output.classesDir }
    test { output.resourcesDir = output.classesDir }
}

///////////////////////// DEPENDENCIES /////////////////////////
repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "net.sourceforge.argparse4j:argparse4j:$argparse4jVersion"
    testCompile "junit:junit:$junitVersion"
}
///////////////////////// END OF DEPENDENCIES /////////////////////////

///////////////////////// ARTIFACTS AND JARS /////////////////////////
task sourcesZip(type: Zip, group: 'build', description: 'Assembles a zip archive containing all sources.') {
    classifier = 'sources'
    from sourceSets['main'].allSource
}

task docsZip(type: Zip, group: 'documentation', description: 'Assemble a zip archive containing documentation.',
             dependsOn: dokka) {
    classifier = 'docs'
    from dokka.outputDirectory
}

shadowJar {
    classifier = 'fatjar'
}

tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    // Adding license file, and README's
    from files("$projectDir/LICENSE", "$projectDir/README.adoc", "$projectDir/README.html")
}

artifacts {
    archives jar
    archives sourcesZip
    archives docsZip
}
///////////////////////// END OF ARTIFACTS AND JARS /////////////////////////

///////////////////////// PUBLISHING /////////////////////////
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            
            artifact sourcesZip {
                classifier = "sources"
            }
            
            artifact docsZip {
                classifier = "docs"
            }
        }
    }
    
//    repositories {
//        maven {
//            url "http://repo1.maven.org/maven/"
//        }
//    }
}
///////////////////////// END OF PUBLISHING /////////////////////////
